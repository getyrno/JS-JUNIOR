/**
 * Полное руководство по функциям для Junior JS Developer
 *
 * Глава: Дополнительные аспекты
 * Подглава: Параметры по умолчанию
 */

/**
 * Введение
 *
 * Параметры по умолчанию в JavaScript позволяют задавать начальные значения для параметров функции.
 * Это особенно полезно, когда функция вызывается без указания некоторых аргументов, и нужно, чтобы
 * эти параметры имели определенные значения по умолчанию.
 */

/**
 * Основы параметров по умолчанию
 *
 * Параметры по умолчанию задаются в объявлении функции. Если аргумент не передан при вызове функции,
 * используется значение по умолчанию.
 *
 * Пример:
 */
function greet(name = 'гость') {
    console.log('Привет, ' + name + '!');
}

// Вызов функции без аргумента
greet(); // Вывод: Привет, гость!

// Вызов функции с аргументом
greet('Алиса'); // Вывод: Привет, Алиса!

/**
 * Использование выражений в параметрах по умолчанию
 *
 * Параметры по умолчанию могут быть не только примитивными значениями, но и результатом выражений.
 *
 * Пример:
 */
function calculateArea(width = 5, height = width * 2) {
    return width * height;
}

console.log(calculateArea()); // Вывод: 50
console.log(calculateArea(3)); // Вывод: 18

/**
 * Параметры по умолчанию и объект arguments
 *
 * При использовании параметров по умолчанию объект `arguments` по-прежнему содержит все переданные
 * аргументы, даже если некоторые из них не указаны и используются значения по умолчанию.
 *
 * Пример:
 */
function showArgs(x = 1, y = 2) {
    console.log(arguments.length);
    console.log(arguments[0]);
    console.log(arguments[1]);
}

showArgs();         // Вывод: 0 undefined undefined
showArgs(5);        // Вывод: 1 5 undefined
showArgs(5, 10);    // Вывод: 2 5 10

/**
 * Взаимодействие с другими параметрами
 *
 * Параметры по умолчанию могут взаимодействовать с другими параметрами функции. Порядок
 * объявления параметров имеет значение.
 *
 * Пример:
 */
function multiply(a, b = a) {
    return a * b;
}

console.log(multiply(5)); // Вывод: 25 (5 * 5)
console.log(multiply(5, 2)); // Вывод: 10

/**
 * Параметры по умолчанию и деструктуризация
 *
 * Значения по умолчанию могут быть использованы и при деструктуризации параметров.
 *
 * Пример:
 */
function printCoordinates({ x = 0, y = 0 } = {}) {
    console.log(`Координаты: x = ${x}, y = ${y}`);
}

printCoordinates();             // Вывод: Координаты: x = 0, y = 0
printCoordinates({ x: 5 });     // Вывод: Координаты: x = 5, y = 0
printCoordinates({ y: 7 });     // Вывод: Координаты: x = 0, y = 7
printCoordinates({ x: 3, y: 4 }); // Вывод: Координаты: x = 3, y = 4

/**
 * Заключение
 *
 * Параметры по умолчанию в JavaScript упрощают написание функций, делая их более гибкими и
 * удобными в использовании. Они позволяют задавать начальные значения для параметров, что помогает
 * избежать ошибок и упрощает работу с функциями.
 */