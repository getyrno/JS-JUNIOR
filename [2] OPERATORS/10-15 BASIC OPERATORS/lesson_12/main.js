console.log(1 && 0);

// console.log: Выводит сообщение в консоль браузера.
// 1 && 0: Логический оператор И (AND). Возвращает первый ложный (false) операнд или последний, если все операнды истинные (true).
// Результат: 0
// Тип данных: Number
// Особенности:
//     Логический оператор И (&&) выполняет логическое И между двумя операндами.
//     Поскольку 0 является ложным значением (falsy), результатом выражения будет 0.

console.log(1 && 0 && 1);

// console.log: Выводит сообщение в консоль браузера.
// 1 && 0 && 1: Логический оператор И (AND). Возвращает первый ложный (false) операнд или последний, если все операнды истинные (true).
// Результат: 0
// Тип данных: Number
// Особенности:
//     Логический оператор И (&&) выполняет логическое И между несколькими операндами.
//     Поскольку 0 является ложным значением (falsy), результатом выражения будет 0.

console.log(1 && 1 && 5 && 3);

// console.log: Выводит сообщение в консоль браузера.
// 1 && 1 && 5 && 3: Логический оператор И (AND). Возвращает первый ложный (false) операнд или последний, если все операнды истинные (true).
// Результат: 3
// Тип данных: Number
// Особенности:
//     Логический оператор И (&&) выполняет логическое И между несколькими операндами.
//     Поскольку все операнды истинные (truthy), результатом выражения будет последний операнд, то есть 3.

console.log(false == 0);

// console.log: Выводит сообщение в консоль браузера.
// false == 0: Оператор нестрогого равенства. Проверяет равенство двух операндов после приведения типов.
// Результат: true
// Тип данных: Boolean
// Особенности:
//     Оператор == приводит оба операнда к одному типу перед сравнением.
//     false и 0 являются равными после приведения типов, поэтому результат будет true.

console.log(true === 1);

// console.log: Выводит сообщение в консоль браузера.
// true === 1: Оператор строгого равенства. Проверяет равенство двух операндов без приведения типов.
// Результат: false
// Тип данных: Boolean
// Особенности:
//     Оператор === не приводит операнды к одному типу перед сравнением.
//     true (Boolean) и 1 (Number) являются разными типами данных, поэтому результат будет false.

let n1;

// let: Объявляет переменную с областью видимости в блоке кода.
// n1: Имя переменной, которая объявлена, но не инициализирована.
// Тип данных: undefined
// Особенности:
//     Переменная n1 объявлена, но не инициализирована, поэтому ее значение по умолчанию будет undefined.

console.log(n1);

// console.log: Выводит сообщение в консоль браузера.
// n1: Переменная, значение которой undefined.
// Результат: undefined
// Тип данных: undefined
// Особенности:
//     Поскольку переменная n1 не инициализирована, ее значение будет undefined.

console.log(n1 && true);

// console.log: Выводит сообщение в консоль браузера.
// n1 && true: Логический оператор И (AND). Возвращает первый ложный (false) операнд или последний, если все операнды истинные (true).
// Результат: undefined
// Тип данных: undefined
// Особенности:
//     Поскольку n1 имеет значение undefined (falsy), результатом выражения будет undefined.

console.log('' && true);

// console.log: Выводит сообщение в консоль браузера.
// '' && true: Логический оператор И (AND). Возвращает первый ложный (false) операнд или последний, если все операнды истинные (true).
// Результат: ''
// Тип данных: String
// Особенности:
//     Поскольку пустая строка ('') является ложным значением (falsy), результатом выражения будет ''.


// Архитектура и работа:
//     Логический оператор И (&&) возвращает первый ложный (falsy) операнд или последний, если все операнды истинные (truthy).
//     Оператор == приводит операнды к одному типу перед сравнением, тогда как оператор === сравнивает операнды без приведения типов.
//     Переменные, объявленные с помощью let, могут быть не инициализированы, в этом случае их значение будет undefined.
//     В JavaScript falsy значения включают false, 0, '', null, undefined и NaN. Все остальные значения являются truthy.
