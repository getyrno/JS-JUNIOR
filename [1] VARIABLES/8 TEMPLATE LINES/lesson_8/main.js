const name = "Mary";

// const: Объявляет переменную с областью видимости в блоке кода, значение которой не может быть изменено.
// name: Имя переменной, которая содержит строку "Mary".
// "Mary": Присвоенное значение типа String.
// Тип данных: String
// Особенности:
//     Переменной name присваивается строка "Mary".
//     Переменные, объявленные с помощью const, имеют блочную область видимости и не могут быть изменены после инициализации.

const greeting = "Hello " + name;

// const: Объявляет переменную с областью видимости в блоке кода, значение которой не может быть изменено.
// greeting: Имя переменной, которая содержит строку, полученную путем конкатенации строк "Hello" и значения переменной name.
// "Hello" + name: Конкатенация строк. Результатом будет "Hello Mary".
// Тип данных: String
// Особенности:
//     Конкатенация строк выполняется с использованием оператора +.
//     Значение переменной greeting будет "HelloMary".
//     Переменные, объявленные с помощью const, имеют блочную область видимости и не могут быть изменены после инициализации.

let name2 = 'Eve';

// let: Объявляет переменную с областью видимости в блоке кода.
// name2: Имя переменной, которая содержит строку "Eve".
// 'Eve': Присвоенное значение типа String.
// Тип данных: String
// Особенности:
//     Переменной name2 присваивается строка 'Eve'.
//     Переменные, объявленные с помощью let, могут быть изменены, но не могут быть повторно объявлены в той же области видимости.

let greeting2 = `Hello ${name2}`;

// let: Объявляет переменную с областью видимости в блоке кода.
// greeting2: Имя переменной, которая содержит строку, полученную с использованием шаблонных строк (template literals).
// `Hello ${name2}`: Шаблонная строка. Результатом будет "Hello Eve".
// Тип данных: String
// Особенности:
//     Шаблонные строки (template literals) позволяют встраивать выражения внутри строк с использованием синтаксиса ${}.
//     Значение переменной greeting2 будет "Hello Eve".


// Архитектура и работа:
//     Переменная name объявляется с помощью const и имеет блочную область видимости, ее значение "Mary" не может быть изменено.
//     Переменная greeting объявляется с помощью const и получает значение путем конкатенации строк "Hello" и "Mary".
//     Переменная name2 объявляется с помощью let и имеет блочную область видимости, ее значение "Eve" может быть изменено.
//     Переменная greeting2 объявляется с помощью let и получает значение с использованием шаблонных строк (template literals).
//     Шаблонные строки позволяют легко встраивать значения переменных и выражения в строки с использованием синтаксиса ${}.
